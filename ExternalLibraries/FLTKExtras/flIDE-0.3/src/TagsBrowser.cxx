// generated by Fast Light User Interface Designer (fluid) version 1.00

#include "TagsBrowser.H"

inline void TagsBrowser::cb_Reload_i(Fl_Button*, void*) {
  Reload();
}
void TagsBrowser::cb_Reload(Fl_Button* o, void* v) {
  ((TagsBrowser*)(o->parent()->parent()->user_data()))->cb_Reload_i(o,v);
}

inline void TagsBrowser::cb_Make_i(Fl_Button*, void*) {
  MakeTagsAndReload();
}
void TagsBrowser::cb_Make(Fl_Button* o, void* v) {
  ((TagsBrowser*)(o->parent()->parent()->user_data()))->cb_Make_i(o,v);
}

inline void TagsBrowser::cb_Name_i(Fl_Menu_*, void*) {
  SortByName();
}
void TagsBrowser::cb_Name(Fl_Menu_* o, void* v) {
  ((TagsBrowser*)(o->parent()->parent()->user_data()))->cb_Name_i(o,v);
}

inline void TagsBrowser::cb_Line_i(Fl_Menu_*, void*) {
  SortByLine();
}
void TagsBrowser::cb_Line(Fl_Menu_* o, void* v) {
  ((TagsBrowser*)(o->parent()->parent()->user_data()))->cb_Line_i(o,v);
}

Fl_Menu_Item TagsBrowser::menu_Sort[] = {
 {"Name", 0,  (Fl_Callback*)TagsBrowser::cb_Name, 0, 0, 0, 0, 12, 0},
 {"Line", 0,  (Fl_Callback*)TagsBrowser::cb_Line, 0, 0, 0, 0, 12, 0},
 {0}
};

TagsBrowser::TagsBrowser() {
  Fl_Group* w;
  { Fl_Group* o = new Fl_Group(0, 0, 282, 288);
    w = o;
    o->user_data((void*)(this));
    { Fl_Scroll* o = scroll = new Fl_Scroll(3, 26, 275, 258);
      o->type(7);
      o->box(FL_THIN_DOWN_BOX);
      o->align(FL_ALIGN_TOP_LEFT|FL_ALIGN_INSIDE);
      o->end();
    }
    { Fl_Box* o = new Fl_Box(270, 26, 7, 258);
      o->hide();
      Fl_Group::current()->resizable(o);
    }
    { Fl_Group* o = new Fl_Group(0, 0, 285, 25);
      { Fl_Button* o = new Fl_Button(86, 3, 80, 20, "Reload");
        o->box(FL_THIN_UP_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_Reload);
      }
      { Fl_Button* o = new Fl_Button(3, 3, 80, 20, "Make tags");
        o->box(FL_THIN_UP_BOX);
        o->labelsize(12);
        o->callback((Fl_Callback*)cb_Make);
      }
      { Fl_Choice* o = new Fl_Choice(213, 3, 65, 20, "Sort by");
        o->box(FL_THIN_UP_BOX);
        o->labelsize(12);
        o->textsize(12);
        o->menu(menu_Sort);
      }
      { Fl_Box* o = new Fl_Box(279, 3, 6, 19, "label");
        o->hide();
        Fl_Group::current()->resizable(o);
      }
      o->end();
    }
    mMainGroup=o;
    o->end();
  }
}

Fl_Group* TagsBrowser::Preferences() {
  Fl_Group* w;
  { Fl_Group* o = new Fl_Group(0, 0, 254, 276);
    w = o;
    o->user_data((void*)(this));
    { Fl_Box* o = new Fl_Box(5, 5, 140, 35, "sort members/methods/\nvariables/functions by:");
      o->labelsize(12);
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Round_Button* o = mSortByName = new Fl_Round_Button(145, 5, 95, 20, "name");
      o->type(102);
      o->down_box(FL_ROUND_DOWN_BOX);
      o->value(1);
      o->color(48);
      o->selection_color(3);
      o->labelsize(12);
      o->user_data((void*)(&mSortType));
    }
    { Fl_Round_Button* o = mSortByLine = new Fl_Round_Button(145, 20, 95, 20, "line in source");
      o->type(102);
      o->down_box(FL_ROUND_DOWN_BOX);
      o->color(48);
      o->selection_color(3);
      o->labelsize(12);
    }
    { Fl_Box* o = new Fl_Box(5, 115, 115, 15, "Invoke ctags with:");
      o->labelsize(12);
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Input* o = new Fl_Input(5, 130, 245, 35);
      o->type(4);
      o->box(FL_THIN_DOWN_BOX);
      o->labelsize(12);
      o->textsize(12);
      o->user_data((void*)(&mInvokeCTagsStr));
      o->align(FL_ALIGN_TOP);
    }
    { Fl_Box* o = new Fl_Box(5, 50, 115, 15, "make ctags with:");
      o->labelsize(12);
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Input* o = new Fl_Input(5, 65, 245, 35);
      o->type(4);
      o->box(FL_THIN_DOWN_BOX);
      o->labelsize(12);
      o->textsize(12);
      o->user_data((void*)(&mMakeCTagsStr));
      o->align(FL_ALIGN_TOP);
    }
    { Fl_Box* o = new Fl_Box(5, 175, 230, 30, "Invoke editor with: \n[%f for filename, %n for linenumber]");
      o->labelsize(12);
      o->align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE);
    }
    { Fl_Input* o = new Fl_Input(5, 205, 245, 35);
      o->type(4);
      o->box(FL_THIN_DOWN_BOX);
      o->labelsize(12);
      o->textsize(12);
      o->user_data((void*)(&mInvokeEditorStr));
      o->align(FL_ALIGN_TOP);
    }
    o->end();
  }
  return w;
}
//------------------------
//------------------------
//------------------------
//------------------------
//------------------------
